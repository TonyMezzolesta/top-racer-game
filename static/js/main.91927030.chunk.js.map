{"version":3,"sources":["images/Topdown_vehicle_sprites_pack/Audi.png","images/Topdown_vehicle_sprites_pack/truck.png","images/road.png","images/Topdown_vehicle_sprites_pack/taxi.png","images/Topdown_vehicle_sprites_pack/Car.png","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","Input.js","Timer.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/construct.js","SpriteImage.js","Player.js","Road.js","Load.js","Vehicle.js","Game.js","index.js"],"names":["module","exports","__webpack_require__","p","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","Input","listen","inputStates","arguments","undefined","canvas","document","addEventListener","event","keyCode","left","up","right","down","space","addWindowListeners","e","mousePos","rect","getBoundingClientRect","x","clientX","y","clientY","top","getMousePos","mousedown","mouseButton","button","addCanvasListeners","oldTime","Timer","getDelta","currentTime","delta","distanceToMove","speed","_setPrototypeOf","o","setPrototypeOf","__proto__","construct_construct","Parent","args","Class","Reflect","construct","sham","Proxy","Date","toString","call","isNativeReflectConstruct","a","push","apply","Function","bind","SpriteImage","img","width","height","this","ctx","xPos","yPos","scale","drawImage","Player","position","_len","Array","_key","sprite","concat","_this$ctx$canvas","cH","cW","dt","maxSpeed","draw","Road","totalSeconds","_this$sprite","sH","sW","numImages","Math","ceil","save","translate","restore","LANE_CENTER","Load","images","files","loaded","Promise","resolve","forEach","file","Image","src","onload","Vehicle","startOffset","sOff","lane","getRandomInt","moveToStartPosition","min","max","floor","random","GAME_STATE","MAIN_MENU","RUNNING","GAME_OVER","TIME_BETWEEN_LEVELS","Game","currentGameState","currentLevel","currentLevelTime","canvasElement","_this","getContext","font","player","road","truck","taxi","car","loadAssets","setImage","audi","requestAnimationFrame","mainLoop","cb","then","_this$canvas","clearRect","time","clearCanvas","fillStyle","fillRect","update","goToNextLevel","fillText","toFixed","window","start","querySelector"],"mappings":"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","file":"static/js/main.91927030.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Audi.5498a290.png\";","module.exports = __webpack_public_path__ + \"static/media/truck.0c526a94.png\";","module.exports = __webpack_public_path__ + \"static/media/road.a03ad39a.png\";","module.exports = __webpack_public_path__ + \"static/media/taxi.b2ca867e.png\";","module.exports = __webpack_public_path__ + \"static/media/Car.a39891fa.png\";","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","const getMousePos = (e, canvas) => {\n  // necessary to take into account CSS boudaries\n  const rect = canvas.getBoundingClientRect();\n  return {\n    x: e.clientX - rect.left,\n    y: e.clientY - rect.top\n  };\n};\n\nconst addWindowListeners = (inputStates) => {\n  //add the listener to the main, window object, and update the states\n  document.addEventListener('keydown', function (event) {\n    if (event.keyCode === 37) {\n      inputStates.left = true;\n    } else if (event.keyCode === 38) {\n      inputStates.up = true;\n    } else if (event.keyCode === 39) {\n      inputStates.right = true;\n    } else if (event.keyCode === 40) {\n      inputStates.down = true;\n    } else if (event.keyCode === 32) {\n      inputStates.space = true;\n    }\n  }, false);\n\n  //if the key will be released, change the states object\n  document.addEventListener('keyup', function (event) {\n    if (event.keyCode === 37) {\n      inputStates.left = false;\n    } else if (event.keyCode === 38) {\n      inputStates.up = false;\n    } else if (event.keyCode === 39) {\n      inputStates.right = false;\n    } else if (event.keyCode === 40) {\n      inputStates.down = false;\n    } else if (event.keyCode === 32) {\n      inputStates.space = false;\n    }\n  }, false);\n};\n\nconst addCanvasListeners = (inputStates, canvas) => {\n  // Mouse event listeners\n  canvas.addEventListener('mousemove', function (e) {\n    inputStates.mousePos = getMousePos(e, canvas);\n  }, false);\n\n  canvas.addEventListener('mousedown', function (e) {\n    inputStates.mousedown = true;\n    inputStates.mouseButton = e.button;\n  }, false);\n\n  canvas.addEventListener('mouseup', function (e) {\n    inputStates.mousedown = false;\n  }, false);\n};\n\nconst Input = {\n  listen(inputStates = {}, canvas) {\n    addWindowListeners(inputStates);\n    addCanvasListeners(inputStates, canvas);\n  }  \n};\n\nexport default Input;\n","let oldTime = 0;\n\nconst Timer = {\n  getDelta(currentTime) {\n    const delta = currentTime - oldTime;\n    oldTime = currentTime;\n    return delta;\n  },\n  distanceToMove(delta, speed) {\n    return (speed * delta) / 1000;\n  }\n};\n\nexport default Timer;\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","class SpriteImage {\n  constructor(img, x, y, width, height) {\n    this.img = img; // the whole image that contains all sprites\n    this.x = x; // x, y position of the sprite image in the whole image\n    this.y = y;\n    this.width = width; // width and height of the sprite image\n    this.height = height;\n  }\n\n  // xPos and yPos = position where the sprite should be drawn,\n  // scale = rescaling factor between 0 and 1\n  draw(ctx, xPos, yPos, scale) {\n    ctx.drawImage(\n      this.img,\n      this.x,\n      this.y,\n      this.width,\n      this.height,\n      xPos,\n      yPos, // x, y, width and height of img to draw\n      this.width * scale,\n      this.height * scale\n    );\n  }\n}\n\nexport default SpriteImage;\n","import SpriteImage from \"./SpriteImage\";\n\nclass Player {\n  static maxSpeed = 0.5;\n\n  constructor(ctx, inputStates) {\n    this.ctx = ctx;\n    this.inputStates = inputStates;\n    this.position = {\n      x: 0,\n      y: 0\n    };\n    this.scale = 0.7;\n  }\n\n  setImage(img, ...args) {\n    this.sprite = new SpriteImage(img, ...args);\n  }\n\n  moveToStartPosition() {\n    const { height: cH, width: cW } = this.ctx.canvas;\n    this.position = {\n      x: cW / 2 - this.sprite.width * this.scale / 2,\n      y: cH - 16 - this.sprite.height * this.scale\n    };\n  }\n\n  setPosition(x, y) {\n    this.position = { x, y };\n  }\n\n  update(dt) {\n    if (this.inputStates.left) {\n      this.position.x += -Player.maxSpeed * dt;\n    }\n    if (this.inputStates.right) {\n      this.position.x += Player.maxSpeed * dt;\n    }\n\n    this.sprite.draw(this.ctx, this.position.x, this.position.y, this.scale);\n  }\n}\n\nexport default Player;\n","import SpriteImage from './SpriteImage';\n\nclass Road {\n  static LANE_CENTER = [220, 344, 476];\n\n  constructor(ctx, inputStates) {\n    this.ctx = ctx;\n    this.inputStates = inputStates;\n    this.speed = 0.5;\n    this.totalSeconds = 0;\n  }\n\n  setImage(img, ...args) {\n    this.sprite = new SpriteImage(img, ...args);\n  }\n\n  update(dt) {\n    const { width: cW } = this.ctx.canvas;\n    const { height: sH, width: sW } = this.sprite;\n    this.totalSeconds += dt;\n    const numImages = Math.ceil(cW / sW) + 1;\n    const yPos = this.totalSeconds * this.speed % sH;\n\n    this.ctx.save();\n    this.ctx.translate(0, yPos);\n    for (let i = 0; i < numImages; i++) {\n      this.sprite.draw(this.ctx, cW / 2 - sW / 2, -i * sH, 1)\n    }\n    this.ctx.restore();\n  }\n}\n\nexport default Road;\n","const Load = {\n  images(...files) {\n    let loaded = 0;\n    const images = {};\n    return new Promise(resolve => {\n      files.forEach(file => {\n        const img = new Image();\n        img.src = file;\n        img.onload = () => {\n          loaded++;\n          images[file] = img;\n          if (loaded === files.length) resolve(images);\n        };\n      });\n    });\n  }\n};\n\nexport default Load;\n","import SpriteImage from \"./SpriteImage\";\nimport Road from \"./Road\";\n\nclass Vehicle {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.scale = 0.9;\n    this.speed = {\n      x: 0,\n      y: 0.1\n    };\n  }\n\n  setImage(img, ...args) {\n    this.sprite = new SpriteImage(img, ...args);\n  }\n\n  moveToStartPosition(startOffset) {\n    const sOff = startOffset || this.startOffset;\n    this.lane = Vehicle.getRandomInt(0, Road.LANE_CENTER.length);\n    const { height: sH, width: sW } = this.sprite;\n    this.position = { x: Road.LANE_CENTER[this.lane] - sW / 2, y: -(sH + sOff) };\n    this.startOffset = sOff;\n  }\n\n  update(dt) {\n    this.position.y += this.speed.y * dt;\n    this.sprite.draw(this.ctx, this.position.x, this.position.y, this.scale);\n\n    if (this.position.y > this.ctx.canvas.height) {\n      this.moveToStartPosition();\n    }\n  }\n\n  static getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\n  }\n}\n\nexport default Vehicle;\n","import Input from \"./Input\";\nimport Timer from \"./Timer\";\nimport Player from \"./Player\";\nimport Road from \"./Road\";\nimport Load from \"./Load\";\nimport Vehicle from \"./Vehicle\";\n\nimport audi from \"./images/Topdown_vehicle_sprites_pack/Audi.png\";\nimport truck from \"./images/Topdown_vehicle_sprites_pack/truck.png\";\nimport road from \"./images/road.png\";\nimport taxi from \"./images/Topdown_vehicle_sprites_pack/taxi.png\";\nimport car from \"./images/Topdown_vehicle_sprites_pack/Car.png\";\n\nconst GAME_STATE = {\n  MAIN_MENU: 0,\n  RUNNING: 1,\n  GAME_OVER: 2\n};\n\nconst TIME_BETWEEN_LEVELS = 5000; // 5 seconds\n\nclass Game {\n  constructor() {\n    this.inputStates = {};\n\n    // game states\n    this.currentGameState = GAME_STATE.RUNNING;\n    this.currentLevel = 1;\n    this.currentLevelTime = TIME_BETWEEN_LEVELS;\n  }\n\n  start(canvasElement) {\n    // Canvas, context etc.\n    this.canvas = canvasElement;\n\n    // important, we will draw with this object\n    this.ctx = this.canvas.getContext(\"2d\");\n    // default police for text\n    this.ctx.font = \"20px Arial\";\n    // Create the different key and mouse listeners\n    Input.listen(this.inputStates, this.canvas);\n\n    this.player = new Player(this.ctx, this.inputStates);\n    this.road = new Road(this.ctx, this.inputStates);\n\n    this.truck = new Vehicle(this.ctx);\n    this.taxi = new Vehicle(this.ctx);\n    this.car = new Vehicle(this.ctx);\n\n    this.loadAssets(images => {\n      this.player.setImage(images[audi], 78, 24, 96, 216);\n      this.road.setImage(images[road], 0, 0, 840, 650);\n      this.truck.setImage(images[truck], 78, 24, 96, 216);\n      this.car.setImage(images[car], 78, 24, 96, 216);\n      this.taxi.setImage(images[taxi], 72, 18, 102, 220);\n\n      this.car.scale = 0.79;\n      this.taxi.scale = 0.68;\n\n      this.player.moveToStartPosition();\n      this.taxi.moveToStartPosition(200);\n      this.truck.moveToStartPosition(450);\n      this.car.moveToStartPosition(700);\n\n      this.truck.speed.y = 0.12;\n      this.taxi.speed.y = 0.09;\n\n      requestAnimationFrame(this.mainLoop.bind(this));\n    });\n  }\n\n  loadAssets(cb) {\n    Load.images(audi, road, truck, taxi, car).then(images => cb(images));\n  }\n\n  clearCanvas() {\n    const { width, height } = this.canvas;\n    this.ctx.clearRect(0, 0, width, height);\n  }\n\n  mainLoop(time) {\n    // number of ms since last frame draw\n    const dt = Timer.getDelta(time);\n\n    this.clearCanvas();\n\n    this.ctx.fillStyle = \"green\";\n    this.ctx.fillRect(0, 0, 100, 100);\n\n    this.road.update(dt);\n    this.player.update(dt);\n    this.truck.update(dt);\n    this.taxi.update(dt);\n    this.car.update(dt);\n\n    switch (this.currentGameState) {\n      case GAME_STATE.RUNNING:\n        if (this.currentLevelTime < 0) {\n          this.goToNextLevel();\n        }\n\n        break;\n      case GAME_STATE.MAIN_MENU:\n        // TO DO !\n        break;\n      case GAME_STATE.GAME_OVER:\n        this.ctx.fillText(\"GAME OVER\", 50, 100);\n        this.ctx.fillText(\"Press SPACE to start again\", 50, 150);\n        this.ctx.fillText(\"Move with arrow keys\", 50, 200);\n        this.ctx.fillText(\"Survive 5 seconds for next level\", 50, 250);\n\n        break;\n      default:\n        break;\n    }\n\n    // call the animation loop every 1/60th of second\n    requestAnimationFrame(this.mainLoop.bind(this));\n  }\n\n  goToNextLevel() {\n    // reset time available for next level\n    // 5 seconds in this example\n    this.currentLevelTime = 5000;\n    this.currentLevel++;\n    // Add two balls per level\n  }\n\n  startNewGame() {\n    this.currentLevelTime = 5000;\n    this.currentLevel = 1;\n    this.currentGameState = GAME_STATE.RUNNING;\n  }\n\n  displayScore() {\n    const { ctx, currentLevel, currentLevelTime } = this;\n    ctx.save();\n    ctx.fillStyle = \"Green\";\n    ctx.fillText(\"Level: \" + currentLevel, 300, 30);\n    ctx.fillText(\"Time: \" + (currentLevelTime / 1000).toFixed(1), 300, 60);\n    ctx.restore();\n  }\n}\n\nexport default Game;\n","import './index.css';\nimport Game from './Game'\n\nwindow.onload = function init() {\n  const game = new Game();\n  game.start(document.querySelector('canvas'));\n};\n"],"sourceRoot":""}