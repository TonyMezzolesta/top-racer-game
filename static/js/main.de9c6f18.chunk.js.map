{"version":3,"sources":["images/Topdown_vehicle_sprites_pack/Audi.png","images/Topdown_vehicle_sprites_pack/truck.png","images/road.png","images/Topdown_vehicle_sprites_pack/taxi.png","images/Topdown_vehicle_sprites_pack/Car.png","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","Input.js","Timer.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/construct.js","SpriteImage.js","collision.js","Player.js","Road.js","Load.js","Vehicle.js","Game.js","../node_modules/@babel/runtime/helpers/esm/objectSpread.js","index.js"],"names":["module","exports","__webpack_require__","p","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","_createClass","protoProps","staticProps","prototype","Input","listen","inputStates","arguments","undefined","canvas","document","addEventListener","event","keyCode","left","up","right","down","space","addWindowListeners","e","mousePos","rect","getBoundingClientRect","x","clientX","y","clientY","top","getMousePos","mousedown","mouseButton","button","addCanvasListeners","oldTime","Timer","getDelta","currentTime","delta","distanceToMove","speed","_setPrototypeOf","o","setPrototypeOf","__proto__","construct_construct","Parent","args","Class","Reflect","construct","sham","Proxy","Date","toString","call","isNativeReflectConstruct","a","push","apply","Function","bind","SpriteImage","img","width","height","this","ctx","xPos","yPos","scale","drawImage","Strategy","x1","y1","w1","h1","x2","y2","w2","h2","collision","entity1","entity2","extra","_entity1$position","position","_entity2$position","Player","_len","Array","_key","sprite","concat","_this","_len2","entities","_key2","find","ent","_this$ctx$canvas","cH","cW","dt","maxSpeed","draw","Road","totalSeconds","_this$sprite","sH","sW","numImages","Math","ceil","save","translate","restore","LANE_CENTER","Load","images","files","loaded","Promise","resolve","forEach","file","Image","src","onload","Vehicle","startOffset","sOff","lane","getRandomInt","moveToStartPosition","min","max","floor","random","TIME_BETWEEN_LEVELS","GAME_STATE","MAIN_MENU","RUNNING","GAME_OVER","INITIAL_SPEED","Game","currentGameState","currentLevel","currentLevelTime","cb","audi","road","truck","taxi","car","then","canvasElement","getContext","font","player","loadAssets","setImage","resetEntities","requestAnimationFrame","mainLoop","_this$canvas","clearRect","clearCanvas","update","displayScore","checkCollision","fillStyle","fillText","time","running","goToNextLevel","gameOver","startNewGame","toFixed","source","ownKeys","keys","getOwnPropertySymbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","window","start","querySelector"],"mappings":"yEAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6HCAzB,SAAAC,EAAAC,EAAAC,EAAAC,GAYf,OAXAD,KAAAD,EACAG,OAAAC,eAAAJ,EAAAC,EAAA,CACAC,QACAG,YAAA,EACAC,cAAA,EACAC,UAAA,IAGAP,EAAAC,GAAAC,EAGAF,ECZe,SAAAQ,EAAAC,EAAAC,GACf,KAAAD,aAAAC,GACA,UAAAC,UAAA,qCCFA,SAAAC,EAAAC,EAAAC,GACA,QAAAC,EAAA,EAAiBA,EAAAD,EAAAE,OAAkBD,IAAA,CACnC,IAAAE,EAAAH,EAAAC,GACAE,EAAAZ,WAAAY,EAAAZ,aAAA,EACAY,EAAAX,cAAA,EACA,UAAAW,MAAAV,UAAA,GACAJ,OAAAC,eAAAS,EAAAI,EAAAhB,IAAAgB,IAIe,SAAAC,EAAAR,EAAAS,EAAAC,GAGf,OAFAD,GAAAP,EAAAF,EAAAW,UAAAF,GACAC,GAAAR,EAAAF,EAAAU,GACAV,ECbA,IAgEeY,EAPD,CACZC,OADY,WACqB,IAA1BC,EAA0BC,UAAAT,OAAA,QAAAU,IAAAD,UAAA,GAAAA,UAAA,GAAZ,GAAIE,EAAQF,UAAAT,OAAA,EAAAS,UAAA,QAAAC,GAjDR,SAACF,GAE1BI,SAASC,iBAAiB,UAAW,SAAUC,GACvB,KAAlBA,EAAMC,QACRP,EAAYQ,MAAO,EACQ,KAAlBF,EAAMC,QACfP,EAAYS,IAAK,EACU,KAAlBH,EAAMC,QACfP,EAAYU,OAAQ,EACO,KAAlBJ,EAAMC,QACfP,EAAYW,MAAO,EACQ,KAAlBL,EAAMC,UACfP,EAAYY,OAAQ,KAErB,GAGHR,SAASC,iBAAiB,QAAS,SAAUC,GACrB,KAAlBA,EAAMC,QACRP,EAAYQ,MAAO,EACQ,KAAlBF,EAAMC,QACfP,EAAYS,IAAK,EACU,KAAlBH,EAAMC,QACfP,EAAYU,OAAQ,EACO,KAAlBJ,EAAMC,QACfP,EAAYW,MAAO,EACQ,KAAlBL,EAAMC,UACfP,EAAYY,OAAQ,KAErB,GAqBDC,CAAmBb,GAlBI,SAACA,EAAaG,GAEvCA,EAAOE,iBAAiB,YAAa,SAAUS,GAC7Cd,EAAYe,SA5CI,SAACD,EAAGX,GAEtB,IAAMa,EAAOb,EAAOc,wBACpB,MAAO,CACLC,EAAGJ,EAAEK,QAAUH,EAAKR,KACpBY,EAAGN,EAAEO,QAAUL,EAAKM,KAuCGC,CAAYT,EAAGX,KACrC,GAEHA,EAAOE,iBAAiB,YAAa,SAAUS,GAC7Cd,EAAYwB,WAAY,EACxBxB,EAAYyB,YAAcX,EAAEY,SAC3B,GAEHvB,EAAOE,iBAAiB,UAAW,SAAUS,GAC3Cd,EAAYwB,WAAY,IACvB,GAMDG,CAAmB3B,EAAaG,KC5DhCyB,EAAU,EAaCC,EAXD,CACZC,SADY,SACHC,GACP,IAAMC,EAAQD,EAAcH,EAE5B,OADAA,EAAUG,EACHC,GAETC,eANY,SAMGD,EAAOE,GACpB,OAAQA,EAAQF,EAAS,MCTd,SAAAG,EAAAC,EAAA9D,GAMf,OALA6D,EAAAxD,OAAA0D,gBAAA,SAAAD,EAAA9D,GAEA,OADA8D,EAAAE,UAAAhE,EACA8D,IAGAA,EAAA9D,GCSe,SAASiE,EAAUC,EAAAC,EAAAC,GAclC,OAVIH,EAjBJ,WACA,wBAAAI,kBAAAC,UAAA,SACA,GAAAD,QAAAC,UAAAC,KAAA,SACA,uBAAAC,MAAA,SAEA,IAEA,OADAC,KAAAlD,UAAAmD,SAAAC,KAAAN,QAAAC,UAAAG,KAAA,mBACA,EACG,MAAAjC,GACH,UAKAoC,GACcP,QAAAC,UAEA,SAAAJ,EAAAC,EAAAC,GACd,IAAAS,EAAA,OACAA,EAAAC,KAAAC,MAAAF,EAAAV,GACA,IACAxD,EAAA,IADAqE,SAAAC,KAAAF,MAAAb,EAAAW,IAGA,OADAT,GAAiBP,EAAclD,EAAAyD,EAAA7C,WAC/BZ,IAImBoE,MAAA,KAAApD,eCHJuD,aAzBb,SAAAA,EAAYC,EAAKvC,EAAGE,EAAGsC,EAAOC,GAAS3E,EAAA4E,KAAAJ,GACrCI,KAAKH,IAAMA,EACXG,KAAK1C,EAAIA,EACT0C,KAAKxC,EAAIA,EACTwC,KAAKF,MAAQA,EACbE,KAAKD,OAASA,yCAKXE,EAAKC,EAAMC,EAAMC,GACpBH,EAAII,UACFL,KAAKH,IACLG,KAAK1C,EACL0C,KAAKxC,EACLwC,KAAKF,MACLE,KAAKD,OACLG,EACAC,EACAH,KAAKF,MAAQM,EACbJ,KAAKD,OAASK,YCrBdE,EAAW,SAQJC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAAW,IAAP5D,EAAOb,UAAAT,OAAA,QAAAU,IAAAD,UAAA,GAAAA,UAAA,GAAH,EAC7C,QAAIkE,EAAKI,EAAKE,EAAK3D,GAAKqD,EAAKE,EAAKvD,EAAIyD,MAClCH,EAAKI,EAAKE,EAAK5D,GAAKsD,EAAKE,EAAKxD,EAAI0D,IA4B3BG,EAVG,SAACC,EAASC,GAAuB,IAAdC,EAAc7E,UAAAT,OAAA,QAAAU,IAAAD,UAAA,GAAAA,UAAA,GAAN,EAC3BqE,EAAkBM,EAA1BjB,OAAmBU,EAAOO,EAAdlB,MACJgB,EAAkBG,EAA1BlB,OAAmBc,EAAOI,EAAdnB,MAF6BqB,EAIxBH,EAAQI,SAAtBb,EAJsCY,EAIzC7D,EAAUkD,EAJ+BW,EAIlC3D,EAJkC6D,EAKxBJ,EAAQG,SAAtBT,EALsCU,EAKzC/D,EAAUsD,EAL+BS,EAKlC7D,EAEf,OAAO8C,EAAoBC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAII,IChCvDI,aAGJ,SAAAA,EAAYrB,EAAK7D,GAAchB,EAAA4E,KAAAsB,GAC7BtB,KAAKC,IAAMA,EACXD,KAAK5D,YAAcA,EACnB4D,KAAKoB,SAAW,CACd9D,EAAG,EACHE,EAAG,GAELwC,KAAKI,MAAQ,8CAWNP,GAAc,QAAA0B,EAAAlF,UAAAT,OAANiD,EAAM,IAAA2C,MAAAD,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAN5C,EAAM4C,EAAA,GAAApF,UAAAoF,GACrBzB,KAAK0B,OAAL/C,EAAkBiB,EAAlB,CAA8BC,GAA9B8B,OAAsC9C,6CAGZ,QAAA+C,EAAA5B,KAAA6B,EAAAxF,UAAAT,OAAVkG,EAAU,IAAAN,MAAAK,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAVD,EAAUC,GAAA1F,UAAA0F,GAC1B,QAASD,EAASE,KAAK,SAAAC,GAAG,OAAIlB,EAAUa,EAAMK,mDAG1B,IAAAC,EACclC,KAAKC,IAAI1D,OAA3B4F,EADID,EACZnC,OAAmBqC,EADPF,EACApC,MACpBE,KAAKoB,SAAW,CACd9D,EAAG8E,EAAK,EAAKpC,KAAK0B,OAAO5B,MAAQE,KAAKI,MAAS,EAC/C5C,EAAG2E,EAAK,GAAKnC,KAAK0B,OAAO3B,OAASC,KAAKI,2CAI/B9C,EAAGE,GACbwC,KAAKoB,SAAW,CAAE9D,IAAGE,oCAGhB6E,GACDrC,KAAK5D,YAAYQ,OACnBoD,KAAKoB,SAAS9D,IAAMgE,EAAOgB,SAAWD,GAEpCrC,KAAK5D,YAAYU,QACnBkD,KAAKoB,SAAS9D,GAAKgE,EAAOgB,SAAWD,GAGvCrC,KAAK0B,OAAOa,KAAKvC,KAAKC,IAAKD,KAAKoB,SAAS9D,EAAG0C,KAAKoB,SAAS5D,EAAGwC,KAAKI,sCAnClE,OAAOJ,KAAK0B,OAAO3B,OAASC,KAAKI,oCAIjC,OAAOJ,KAAK0B,OAAO5B,MAAQE,KAAKI,eAlB9BkB,EACGgB,SAAW,GAoDLhB,QCtDTkB,aAGJ,SAAAA,EAAYvC,EAAK7D,GAAchB,EAAA4E,KAAAwC,GAC7BxC,KAAKC,IAAMA,EACXD,KAAK5D,YAAcA,EACnB4D,KAAK1B,MAAQ,CACXhB,EAAG,EACHE,EAAG,IAELwC,KAAKyC,aAAe,6CAGb5C,GAAc,QAAA0B,EAAAlF,UAAAT,OAANiD,EAAM,IAAA2C,MAAAD,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAN5C,EAAM4C,EAAA,GAAApF,UAAAoF,GACrBzB,KAAK0B,OAAL/C,EAAkBiB,EAAlB,CAA8BC,GAA9B8B,OAAsC9C,mCAGjCwD,GAAI,IACMD,EAAOpC,KAAKC,IAAI1D,OAAvBuD,MADC4C,EAEyB1C,KAAK0B,OAAvBiB,EAFPD,EAED3C,OAAmB6C,EAFlBF,EAEW5C,MACpBE,KAAKyC,cAAgBJ,EACrB,IAAMQ,EAAYC,KAAKC,KAAKX,EAAKQ,GAAM,EACjCzC,EAAOH,KAAKyC,aAAezC,KAAK1B,MAAMd,EAAImF,EAEhD3C,KAAKC,IAAI+C,OACThD,KAAKC,IAAIgD,UAAU,EAAG9C,GACtB,IAAK,IAAIxE,EAAI,EAAGA,EAAIkH,EAAWlH,IAC7BqE,KAAK0B,OAAOa,KAAKvC,KAAKC,IAAKmC,EAAK,EAAIQ,EAAK,GAAIjH,EAAIgH,EAAI,GAEvD3C,KAAKC,IAAIiD,mBA7BPV,EACGW,YAAc,CAAC,IAAK,IAAK,KAgCnBX,QCjBAY,EAlBF,CACXC,OADW,WACM,QAAA9B,EAAAlF,UAAAT,OAAP0H,EAAO,IAAA9B,MAAAD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAP6B,EAAO7B,GAAApF,UAAAoF,GACf,IAAI8B,EAAS,EACPF,EAAS,GACf,OAAO,IAAIG,QAAQ,SAAAC,GACjBH,EAAMI,QAAQ,SAAAC,GACZ,IAAM9D,EAAM,IAAI+D,MAChB/D,EAAIgE,IAAMF,EACV9D,EAAIiE,OAAS,WACXP,IACAF,EAAOM,GAAQ9D,EACX0D,IAAWD,EAAM1H,QAAQ6H,EAAQJ,UCsChCU,aA7Cb,SAAAA,EAAY9D,GAAM7E,EAAA4E,KAAA+D,GAChB/D,KAAKC,IAAMA,EACXD,KAAKI,MAAQ,GACbJ,KAAK1B,MAAQ,CACXhB,EAAG,EACHE,EAAG,+CAYEqC,GAAc,QAAA0B,EAAAlF,UAAAT,OAANiD,EAAM,IAAA2C,MAAAD,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAN5C,EAAM4C,EAAA,GAAApF,UAAAoF,GACrBzB,KAAK0B,OAAL/C,EAAkBiB,EAAlB,CAA8BC,GAA9B8B,OAAsC9C,gDAGpBmF,GAClB,IAAMC,EAAOD,GAAehE,KAAKgE,YACjChE,KAAKkE,KAAOH,EAAQI,aAAa,EAAG3B,EAAKW,YAAYvH,QAFtB,IAAA8G,EAGG1C,KAAK0B,OAAvBiB,EAHeD,EAGvB3C,OAAmB6C,EAHIF,EAGX5C,MACpBE,KAAKoB,SAAW,CAAE9D,EAAGkF,EAAKW,YAAYnD,KAAKkE,MAAQtB,EAAK,EAAGpF,IAAKmF,EAAKsB,IACrEjE,KAAKgE,YAAcC,iCAGd5B,GACLrC,KAAKoB,SAAS5D,GAAKwC,KAAK1B,MAAMd,EAAI6E,EAClCrC,KAAK0B,OAAOa,KAAKvC,KAAKC,IAAKD,KAAKoB,SAAS9D,EAAG0C,KAAKoB,SAAS5D,EAAGwC,KAAKI,OAE9DJ,KAAKoB,SAAS5D,EAAIwC,KAAKC,IAAI1D,OAAOwD,QACpCC,KAAKoE,qDAxBP,OAAOpE,KAAK0B,OAAO3B,OAASC,KAAKI,oCAIjC,OAAOJ,KAAK0B,OAAO5B,MAAQE,KAAKI,6CAwBdiE,EAAKC,GAGvB,OAFAD,EAAMvB,KAAKC,KAAKsB,GAChBC,EAAMxB,KAAKyB,MAAMD,GACVxB,KAAKyB,MAAMzB,KAAK0B,UAAYF,EAAMD,IAAQA,2FC/B/CI,EAAsB,IAEtBC,EAAa,CACjBC,UAAW,EACXC,QAAS,EACTC,UAAW,GAGPC,EACG,IADHA,EAEC,IAFDA,EAGE,IAHFA,EAIE,GAyKOC,aArKb,SAAAA,IAAe3J,EAAA4E,KAAA+E,GACb/E,KAAK5D,YAAc,GAGnB4D,KAAKgF,iBAAmBN,EAAWE,QACnC5E,KAAKiF,aAAe,EACpBjF,KAAKkF,iBAAmBT,+CAGfU,GACT/B,EAAKC,OAAO+B,IAAMC,IAAMC,IAAOC,IAAMC,KAAKC,KAAK,SAAApC,GAAM,OAAI8B,EAAG9B,mCAGxDqC,GAAe,IAAA9D,EAAA5B,KAEnBA,KAAKzD,OAASmJ,EAGd1F,KAAKC,IAAMD,KAAKzD,OAAOoJ,WAAW,MAElC3F,KAAKC,IAAI2F,KAAO,aAEhB1J,EAAMC,OAAO6D,KAAK5D,YAAa4D,KAAKzD,QAEpCyD,KAAK6F,OAAS,IAAIvE,EAAOtB,KAAKC,IAAKD,KAAK5D,aACxC4D,KAAKqF,KAAO,IAAI7C,EAAKxC,KAAKC,IAAKD,KAAK5D,aAEpC4D,KAAKsF,MAAQ,IAAIvB,EAAQ/D,KAAKC,KAC9BD,KAAKuF,KAAO,IAAIxB,EAAQ/D,KAAKC,KAC7BD,KAAKwF,IAAM,IAAIzB,EAAQ/D,KAAKC,KAE5BD,KAAK8F,WAAW,SAAAzC,GACdzB,EAAKiE,OAAOE,SAAS1C,EAAO+B,KAAO,GAAI,GAAI,GAAI,KAC/CxD,EAAKyD,KAAKU,SAAS1C,EAAOgC,KAAO,EAAG,EAAG,IAAK,KAC5CzD,EAAK0D,MAAMS,SAAS1C,EAAOiC,KAAQ,GAAI,GAAI,GAAI,KAC/C1D,EAAK4D,IAAIO,SAAS1C,EAAOmC,KAAM,GAAI,GAAI,GAAI,KAC3C5D,EAAK2D,KAAKQ,SAAS1C,EAAOkC,KAAO,GAAI,GAAI,IAAK,KAE9C3D,EAAK4D,IAAIpF,MAAQ,IACjBwB,EAAK2D,KAAKnF,MAAQ,IAElBwB,EAAKoE,gBAELC,sBAAsBrE,EAAKsE,SAASvG,KAAKiC,8CAK3C5B,KAAK6F,OAAOzB,sBACZpE,KAAKuF,KAAKnB,oBAAoB,KAC9BpE,KAAKsF,MAAMlB,oBAAoB,KAC/BpE,KAAKwF,IAAIpB,oBAAoB,KAE7BpE,KAAKqF,KAAK/G,MAAMd,EAAIsH,EACpB9E,KAAKsF,MAAMhH,MAAMd,EAAIsH,EACrB9E,KAAKuF,KAAKjH,MAAMd,EAAIsH,EACpB9E,KAAKwF,IAAIlH,MAAMd,EAAIsH,wCAGP,IAAAqB,EACcnG,KAAKzD,OAAvBuD,EADIqG,EACJrG,MAAOC,EADHoG,EACGpG,OACfC,KAAKC,IAAImG,UAAU,EAAG,EAAGtG,EAAOC,mCAG1BsC,GACNrC,KAAKqG,cAELrG,KAAKqF,KAAKiB,OAAOjE,GACjBrC,KAAK6F,OAAOS,OAAOjE,GACnBrC,KAAKsF,MAAMgB,OAAOjE,GAClBrC,KAAKuF,KAAKe,OAAOjE,GACjBrC,KAAKwF,IAAIc,OAAOjE,GAEhBrC,KAAKuG,eAELvG,KAAKkF,kBAAoB7C,EAErBrC,KAAK6F,OAAOW,eAAexG,KAAKsF,MAAOtF,KAAKuF,KAAMvF,KAAKwF,OACzDxF,KAAKgF,iBAAmBN,EAAWG,WAGrCE,EAAKyB,eAAexG,KAAKwF,IAAKxF,KAAKsF,OACnCP,EAAKyB,eAAexG,KAAKwF,IAAKxF,KAAKuF,MACnCR,EAAKyB,eAAexG,KAAKuF,KAAMvF,KAAKsF,0CAa3B,IACMlD,EAAOpC,KAAKC,IAAI1D,OAAvBuD,MACRE,KAAKC,IAAI+C,OACThD,KAAKC,IAAIwG,UAAY,QACrBzG,KAAKC,IAAIyG,SAAS,YAAatE,EAAK,EAAG,KACvCpC,KAAKC,IAAIyG,SAAS,6BAA8BtE,EAAK,EAAG,KACxDpC,KAAKC,IAAIyG,SAAS,uBAAwBtE,EAAK,EAAG,KAClDpC,KAAKC,IAAIyG,SAAS,mCAAoCtE,EAAK,EAAG,KAC9DpC,KAAKC,IAAIiD,2CAGFyD,GAEP,IAAMtE,EAAKpE,EAAMC,SAASyI,GAE1B,OAAQ3G,KAAKgF,kBACX,KAAKN,EAAWE,QACd5E,KAAK4G,QAAQvE,GAETrC,KAAKkF,iBAAmB,GAC1BlF,KAAK6G,gBAGP,MACF,KAAKnC,EAAWC,UAEd,MACF,KAAKD,EAAWG,UACd7E,KAAK8G,WACD9G,KAAK5D,YAAYY,OAAOgD,KAAK+G,eAOrCd,sBAAsBjG,KAAKkG,SAASvG,KAAKK,+CAKzCA,KAAKkF,iBAAmBT,EACxBzE,KAAKiF,eAILjF,KAAKqF,KAAK/G,MAAMd,GAFE,IAGlBwC,KAAKsF,MAAMhH,MAAMd,GAHC,IAIlBwC,KAAKwF,IAAIlH,MAAMd,GAJG,IAKlBwC,KAAKuF,KAAKjH,MAAMd,GALE,2CASlBwC,KAAKkF,iBAAmBT,EACxBzE,KAAKiF,aAAe,EACpBjF,KAAKgF,iBAAmBN,EAAWE,QACnC5E,KAAKgG,uDAGQ,IACL/F,EAAwCD,KAAxCC,IAAKgF,EAAmCjF,KAAnCiF,aAAcC,EAAqBlF,KAArBkF,iBAC3BjF,EAAI+C,OACJ/C,EAAIwG,UAAY,QAChBxG,EAAIyG,SAAS,UAAYzB,EAAc,IAAK,IAC5ChF,EAAIyG,SAAS,UAAYxB,EAAmB,KAAM8B,QAAQ,GAAI,IAAK,IACnE/G,EAAIiD,mDA3EgBlC,EAASC,GACzBF,EAAUC,EAASC,EAAS,MAC1BF,EAAUC,EAASC,GACrBD,EAAQoD,sBAERpD,EAAQ1C,MCxHD,SAAA7C,GACf,QAAAE,EAAA,EAAiBA,EAAAU,UAAAT,OAAsBD,IAAA,CACvC,IAAAsL,EAAA,MAAA5K,UAAAV,GAAAU,UAAAV,GAAA,GACAuL,EAAAnM,OAAAoM,KAAAF,GAEA,oBAAAlM,OAAAqM,wBACAF,IAAAvF,OAAA5G,OAAAqM,sBAAAH,GAAAI,OAAA,SAAAC,GACA,OAAAvM,OAAAwM,yBAAAN,EAAAK,GAAArM,eAIAiM,EAAAxD,QAAA,SAAA7I,GACMF,EAAcc,EAAAZ,EAAAoM,EAAApM,MAIpB,OAAAY,EDwGQ+L,CAAA,GAAqBvG,EAAQ3C,iBEtHrCmJ,OAAO3D,OAAS,YACD,IAAIiB,GACZ2C,MAAMlL,SAASmL,cAAc","file":"static/js/main.de9c6f18.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Audi.5498a290.png\";","module.exports = __webpack_public_path__ + \"static/media/truck.0c526a94.png\";","module.exports = __webpack_public_path__ + \"static/media/road.a03ad39a.png\";","module.exports = __webpack_public_path__ + \"static/media/taxi.b2ca867e.png\";","module.exports = __webpack_public_path__ + \"static/media/Car.a39891fa.png\";","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","const getMousePos = (e, canvas) => {\n  // necessary to take into account CSS boudaries\n  const rect = canvas.getBoundingClientRect();\n  return {\n    x: e.clientX - rect.left,\n    y: e.clientY - rect.top\n  };\n};\n\nconst addWindowListeners = (inputStates) => {\n  //add the listener to the main, window object, and update the states\n  document.addEventListener('keydown', function (event) {\n    if (event.keyCode === 37) {\n      inputStates.left = true;\n    } else if (event.keyCode === 38) {\n      inputStates.up = true;\n    } else if (event.keyCode === 39) {\n      inputStates.right = true;\n    } else if (event.keyCode === 40) {\n      inputStates.down = true;\n    } else if (event.keyCode === 32) {\n      inputStates.space = true;\n    }\n  }, false);\n\n  //if the key will be released, change the states object\n  document.addEventListener('keyup', function (event) {\n    if (event.keyCode === 37) {\n      inputStates.left = false;\n    } else if (event.keyCode === 38) {\n      inputStates.up = false;\n    } else if (event.keyCode === 39) {\n      inputStates.right = false;\n    } else if (event.keyCode === 40) {\n      inputStates.down = false;\n    } else if (event.keyCode === 32) {\n      inputStates.space = false;\n    }\n  }, false);\n};\n\nconst addCanvasListeners = (inputStates, canvas) => {\n  // Mouse event listeners\n  canvas.addEventListener('mousemove', function (e) {\n    inputStates.mousePos = getMousePos(e, canvas);\n  }, false);\n\n  canvas.addEventListener('mousedown', function (e) {\n    inputStates.mousedown = true;\n    inputStates.mouseButton = e.button;\n  }, false);\n\n  canvas.addEventListener('mouseup', function (e) {\n    inputStates.mousedown = false;\n  }, false);\n};\n\nconst Input = {\n  listen(inputStates = {}, canvas) {\n    addWindowListeners(inputStates);\n    addCanvasListeners(inputStates, canvas);\n  }  \n};\n\nexport default Input;\n","let oldTime = 0;\n\nconst Timer = {\n  getDelta(currentTime) {\n    const delta = currentTime - oldTime;\n    oldTime = currentTime;\n    return delta;\n  },\n  distanceToMove(delta, speed) {\n    return (speed * delta) / 1000;\n  }\n};\n\nexport default Timer;\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","class SpriteImage {\n  constructor(img, x, y, width, height) {\n    this.img = img; // the whole image that contains all sprites\n    this.x = x; // x, y position of the sprite image in the whole image\n    this.y = y;\n    this.width = width; // width and height of the sprite image\n    this.height = height;\n  }\n\n  // xPos and yPos = position where the sprite should be drawn,\n  // scale = rescaling factor between 0 and 1\n  draw(ctx, xPos, yPos, scale) {\n    ctx.drawImage(\n      this.img,\n      this.x,\n      this.y,\n      this.width,\n      this.height,\n      xPos,\n      yPos, // x, y, width and height of img to draw\n      this.width * scale,\n      this.height * scale\n    );\n  }\n}\n\nexport default SpriteImage;\n","const Strategy = {\n  circles(x1, y1, r1, x2, y2, r2) {\n    const dx = x1 - x2;\n    const dy = y1 - y2;\n    return dx * dx + dy * dy < (r1 + r2) * (r1 + r2);\n  },\n\n  // Collisions between rectangle\n  rectangles(x1, y1, w1, h1, x2, y2, w2, h2, e = 0) {\n    if (x1 > x2 + w2 + e || x1 + w1 + e < x2) return false;\n    if (y1 > y2 + h2 + e || y1 + h1 + e < y2) return false;\n    return true;\n  },\n\n  // Collisions between rectangle and circle\n  rectangleCircle(x0, y0, w0, h0, cx, cy, r) {\n    let testX = cx;\n    let testY = cy;\n\n    if (testX < x0) testX = x0;\n    if (testX > x0 + w0) testX = x0 + w0;\n    if (testY < y0) testY = y0;\n    if (testY > y0 + h0) testY = y0 + h0;\n\n    return (cx - testX) * (cx - testX) + (cy - testY) * (cy - testY) < r * r;\n  }\n};\n\nconst collision = (entity1, entity2, extra = 0) => {\n  const { height: h1, width: w1 } = entity1;\n  const { height: h2, width: w2 } = entity2;\n\n  const { x: x1, y: y1 } = entity1.position;\n  const { x: x2, y: y2 } = entity2.position;\n\n  return Strategy.rectangles(x1, y1, w1, h1, x2, y2, w2, h2, extra);\n};\n\nexport default collision;\n","import SpriteImage from \"./SpriteImage\";\nimport collision from \"./collision\";\n\nclass Player {\n  static maxSpeed = 0.5;\n\n  constructor(ctx, inputStates) {\n    this.ctx = ctx;\n    this.inputStates = inputStates;\n    this.position = {\n      x: 0,\n      y: 0\n    };\n    this.scale = 0.7;\n  }\n\n  get height() {\n    return this.sprite.height * this.scale;\n  }\n\n  get width() {\n    return this.sprite.width * this.scale;\n  }\n\n  setImage(img, ...args) {\n    this.sprite = new SpriteImage(img, ...args);\n  }\n\n  checkCollision(...entities) {\n    return !!entities.find(ent => collision(this, ent));\n  }\n\n  moveToStartPosition() {\n    const { height: cH, width: cW } = this.ctx.canvas;\n    this.position = {\n      x: cW / 2 - (this.sprite.width * this.scale) / 2,\n      y: cH - 16 - this.sprite.height * this.scale\n    };\n  }\n\n  setPosition(x, y) {\n    this.position = { x, y };\n  }\n\n  update(dt) {\n    if (this.inputStates.left) {\n      this.position.x += -Player.maxSpeed * dt;\n    }\n    if (this.inputStates.right) {\n      this.position.x += Player.maxSpeed * dt;\n    }\n\n    this.sprite.draw(this.ctx, this.position.x, this.position.y, this.scale);\n  }\n}\n\nexport default Player;\n","import SpriteImage from './SpriteImage';\n\nclass Road {\n  static LANE_CENTER = [220, 344, 476];\n\n  constructor(ctx, inputStates) {\n    this.ctx = ctx;\n    this.inputStates = inputStates;\n    this.speed = {\n      x: 0,\n      y: 0.5,\n    };\n    this.totalSeconds = 0;\n  }\n\n  setImage(img, ...args) {\n    this.sprite = new SpriteImage(img, ...args);\n  }\n\n  update(dt) {\n    const { width: cW } = this.ctx.canvas;\n    const { height: sH, width: sW } = this.sprite;\n    this.totalSeconds += dt;\n    const numImages = Math.ceil(cW / sW) + 1;\n    const yPos = this.totalSeconds * this.speed.y % sH;\n\n    this.ctx.save();\n    this.ctx.translate(0, yPos);\n    for (let i = 0; i < numImages; i++) {\n      this.sprite.draw(this.ctx, cW / 2 - sW / 2, -i * sH, 1)\n    }\n    this.ctx.restore();\n  }\n}\n\nexport default Road;\n","const Load = {\n  images(...files) {\n    let loaded = 0;\n    const images = {};\n    return new Promise(resolve => {\n      files.forEach(file => {\n        const img = new Image();\n        img.src = file;\n        img.onload = () => {\n          loaded++;\n          images[file] = img;\n          if (loaded === files.length) resolve(images);\n        };\n      });\n    });\n  }\n};\n\nexport default Load;\n","import SpriteImage from \"./SpriteImage\";\nimport Road from \"./Road\";\n\nclass Vehicle {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.scale = 0.9;\n    this.speed = {\n      x: 0,\n      y: 0.1\n    };\n  }\n\n  get height() {\n    return this.sprite.height * this.scale;\n  }\n\n  get width() {\n    return this.sprite.width * this.scale;\n  }\n\n  setImage(img, ...args) {\n    this.sprite = new SpriteImage(img, ...args);\n  }\n\n  moveToStartPosition(startOffset) {\n    const sOff = startOffset || this.startOffset;\n    this.lane = Vehicle.getRandomInt(0, Road.LANE_CENTER.length);\n    const { height: sH, width: sW } = this.sprite;\n    this.position = { x: Road.LANE_CENTER[this.lane] - sW / 2, y: -(sH + sOff) };\n    this.startOffset = sOff;\n  }\n\n  update(dt) {\n    this.position.y += this.speed.y * dt;\n    this.sprite.draw(this.ctx, this.position.x, this.position.y, this.scale);\n\n    if (this.position.y > this.ctx.canvas.height) {\n      this.moveToStartPosition();\n    }\n  }\n\n  static getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\n  }\n}\n\nexport default Vehicle;\n","import Input from \"./Input\";\nimport Timer from \"./Timer\";\nimport Player from \"./Player\";\nimport Road from \"./Road\";\nimport Load from \"./Load\";\nimport Vehicle from \"./Vehicle\";\n\nimport audi from \"./images/Topdown_vehicle_sprites_pack/Audi.png\";\nimport truck from \"./images/Topdown_vehicle_sprites_pack/truck.png\";\nimport road from \"./images/road.png\";\nimport taxi from \"./images/Topdown_vehicle_sprites_pack/taxi.png\";\nimport car from \"./images/Topdown_vehicle_sprites_pack/Car.png\";\nimport collision from \"./collision\";\n\nconst TIME_BETWEEN_LEVELS = 5000;\n\nconst GAME_STATE = {\n  MAIN_MENU: 0,\n  RUNNING: 1,\n  GAME_OVER: 2\n};\n\nconst INITIAL_SPEED = {\n  TRUCK: 0.15,\n  CAR: 0.12,\n  TAXI: 0.14,\n  ROAD: 0.4\n};\n\nclass Game {\n  constructor() {\n    this.inputStates = {};\n\n    // game states\n    this.currentGameState = GAME_STATE.RUNNING;\n    this.currentLevel = 1;\n    this.currentLevelTime = TIME_BETWEEN_LEVELS;\n  }\n\n  loadAssets(cb) {\n    Load.images(audi, road, truck, taxi, car).then(images => cb(images));\n  }\n\n  start(canvasElement) {\n    // Canvas, context etc.\n    this.canvas = canvasElement;\n\n    // important, we will draw with this object\n    this.ctx = this.canvas.getContext(\"2d\");\n    // default police for text\n    this.ctx.font = \"22px Arial\";\n    // Create the different key and mouse listeners\n    Input.listen(this.inputStates, this.canvas);\n\n    this.player = new Player(this.ctx, this.inputStates);\n    this.road = new Road(this.ctx, this.inputStates);\n\n    this.truck = new Vehicle(this.ctx);\n    this.taxi = new Vehicle(this.ctx);\n    this.car = new Vehicle(this.ctx);\n\n    this.loadAssets(images => {\n      this.player.setImage(images[audi], 78, 24, 96, 216);\n      this.road.setImage(images[road], 0, 0, 840, 650);\n      this.truck.setImage(images[truck], 78, 24, 96, 216);\n      this.car.setImage(images[car], 78, 24, 96, 216);\n      this.taxi.setImage(images[taxi], 72, 18, 102, 220);\n\n      this.car.scale = 0.79;\n      this.taxi.scale = 0.68;\n\n      this.resetEntities();\n\n      requestAnimationFrame(this.mainLoop.bind(this));\n    });\n  }\n\n  resetEntities() {\n    this.player.moveToStartPosition();\n    this.taxi.moveToStartPosition(200);\n    this.truck.moveToStartPosition(450);\n    this.car.moveToStartPosition(700);\n\n    this.road.speed.y = INITIAL_SPEED.ROAD;\n    this.truck.speed.y = INITIAL_SPEED.TRUCK;\n    this.taxi.speed.y = INITIAL_SPEED.TAXI;\n    this.car.speed.y = INITIAL_SPEED.CAR;\n  }\n\n  clearCanvas() {\n    const { width, height } = this.canvas;\n    this.ctx.clearRect(0, 0, width, height);\n  }\n\n  running(dt) {\n    this.clearCanvas();\n\n    this.road.update(dt);\n    this.player.update(dt);\n    this.truck.update(dt);\n    this.taxi.update(dt);\n    this.car.update(dt);\n\n    this.displayScore();\n\n    this.currentLevelTime -= dt;\n\n    if (this.player.checkCollision(this.truck, this.taxi, this.car)) {\n      this.currentGameState = GAME_STATE.GAME_OVER;\n    }\n\n    Game.checkCollision(this.car, this.truck);\n    Game.checkCollision(this.car, this.taxi);\n    Game.checkCollision(this.taxi, this.truck);\n  }\n\n  static checkCollision(entity1, entity2) {\n    if (collision(entity1, entity2, 20)) {\n      if (collision(entity1, entity2)) {\n        entity1.moveToStartPosition();\n      } else {\n        entity1.speed = { ...entity2.speed };\n      }\n    }\n  }\n\n  gameOver() {\n    const { width: cW } = this.ctx.canvas;\n    this.ctx.save();\n    this.ctx.fillStyle = \"White\";\n    this.ctx.fillText(\"GAME OVER\", cW / 2, 100);\n    this.ctx.fillText(\"Press SPACE to start again\", cW / 2, 150);\n    this.ctx.fillText(\"Move with arrow keys\", cW / 2, 200);\n    this.ctx.fillText(\"Survive 5 seconds for next level\", cW / 2, 250);\n    this.ctx.restore();\n  }\n\n  mainLoop(time) {\n    // number of ms since last frame draw\n    const dt = Timer.getDelta(time);\n\n    switch (this.currentGameState) {\n      case GAME_STATE.RUNNING:\n        this.running(dt);\n\n        if (this.currentLevelTime < 0) {\n          this.goToNextLevel();\n        }\n\n        break;\n      case GAME_STATE.MAIN_MENU:\n        // TO DO !\n        break;\n      case GAME_STATE.GAME_OVER:\n        this.gameOver();\n        if (this.inputStates.space) this.startNewGame();\n        break;\n      default:\n        break;\n    }\n\n    // call the animation loop every 1/60th of second\n    requestAnimationFrame(this.mainLoop.bind(this));\n  }\n\n  goToNextLevel() {\n    // reset time available for next level\n    this.currentLevelTime = TIME_BETWEEN_LEVELS;\n    this.currentLevel++;\n\n    const difficult = 1.2;\n\n    this.road.speed.y *= difficult;\n    this.truck.speed.y *= difficult;\n    this.car.speed.y *= difficult;\n    this.taxi.speed.y *= difficult;\n  }\n\n  startNewGame() {\n    this.currentLevelTime = TIME_BETWEEN_LEVELS;\n    this.currentLevel = 1;\n    this.currentGameState = GAME_STATE.RUNNING;\n    this.resetEntities();\n  }\n\n  displayScore() {\n    const { ctx, currentLevel, currentLevelTime } = this;\n    ctx.save();\n    ctx.fillStyle = \"White\";\n    ctx.fillText(\"Level: \" + currentLevel, 300, 30);\n    ctx.fillText(\"Time: \" + (currentLevelTime / 1000).toFixed(1), 300, 60);\n    ctx.restore();\n  }\n}\n\nexport default Game;\n","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import './index.css';\nimport Game from './Game'\n\nwindow.onload = function init() {\n  const game = new Game();\n  game.start(document.querySelector('canvas'));\n};\n"],"sourceRoot":""}