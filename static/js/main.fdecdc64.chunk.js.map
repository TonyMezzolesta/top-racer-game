{"version":3,"sources":["images/Topdown_vehicle_sprites_pack/Audi.png","images/Topdown_vehicle_sprites_pack/truck.png","images/road.png","images/Topdown_vehicle_sprites_pack/taxi.png","images/Topdown_vehicle_sprites_pack/Car.png","images/exp2_0.png","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","Input.js","Timer.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/construct.js","SpriteImage.js","collision.js","SpriteAnimation.js","Player.js","Road.js","Load.js","Vehicle.js","Game.js","../node_modules/@babel/runtime/helpers/esm/objectSpread.js","index.js"],"names":["module","exports","__webpack_require__","p","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","_createClass","protoProps","staticProps","prototype","Input","listen","inputStates","arguments","undefined","canvas","document","addEventListener","event","keyCode","left","up","right","down","space","addWindowListeners","e","mousePos","rect","getBoundingClientRect","x","clientX","y","clientY","top","getMousePos","mousedown","mouseButton","button","addCanvasListeners","oldTime","Timer","getDelta","currentTime","delta","distanceToMove","speed","_setPrototypeOf","o","setPrototypeOf","__proto__","construct_construct","Parent","args","Class","Reflect","construct","sham","Proxy","Date","toString","call","isNativeReflectConstruct","a","push","apply","Function","bind","SpriteImage","img","width","height","this","ctx","xPos","yPos","scale","drawImage","collision","entity1","entity2","extra","h1","w1","h2","w2","_entity1$position","position","x1","y1","_entity2$position","x2","y2","rectangles","SpriteAnimation","spriteArray","currentFrame","delayBetweenFrames","extractSprites","spritesheet","nbPostures","nbFramesPerPosture","spriteWidth","spriteHeight","nbSprites","nbSpritesPerRow","Math","floor","index","s","then","performance","now","totalTimeSinceLastRedraw","draw","setNbImagesPerSecond","nb","Player","state","RUNNING","explosion","reset","_len","Array","_key","sprite","concat","_this","_len2","entities","_key2","find","ent","_this$ctx$canvas","cH","cW","dt","maxSpeed","EXPLODING","Road","accel","totalSeconds","_this$sprite","sH","sW","numImages","ceil","save","translate","restore","LANE_CENTER","Load","images","files","loaded","Promise","resolve","forEach","file","Image","src","onload","Vehicle","startOffset","sOff","lane","getRandomInt","laneX","abs","moveToStartPosition","min","max","random","TIME_BETWEEN_LEVELS","GAME_STATE","MAIN_MENU","GAME_OVER","INITIAL_SPEED","Game","currentGameState","currentLevel","currentLevelTime","cb","audi","road","truck","taxi","car","canvasElement","getContext","font","player","roadLimitLeft","roadLimitRight","loadAssets","setImage","setExplosion","resetEntities","requestAnimationFrame","mainLoop","setState","_this$canvas","clearRect","_this2","clearCanvas","nextRoadSpeed","update","displayScore","checkCollision","setTimeout","fillStyle","fillRect","pad","fillText","time","running","goToNextLevel","gameOver","startNewGame","toFixed","source","ownKeys","keys","getOwnPropertySymbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","window","start","querySelector"],"mappings":"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","file":"static/js/main.fdecdc64.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Audi.5498a290.png\";","module.exports = __webpack_public_path__ + \"static/media/truck.0c526a94.png\";","module.exports = __webpack_public_path__ + \"static/media/road.a03ad39a.png\";","module.exports = __webpack_public_path__ + \"static/media/taxi.b2ca867e.png\";","module.exports = __webpack_public_path__ + \"static/media/Car.a39891fa.png\";","module.exports = __webpack_public_path__ + \"static/media/exp2_0.4310b538.png\";","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","const getMousePos = (e, canvas) => {\n  // necessary to take into account CSS boudaries\n  const rect = canvas.getBoundingClientRect();\n  return {\n    x: e.clientX - rect.left,\n    y: e.clientY - rect.top\n  };\n};\n\nconst addWindowListeners = (inputStates) => {\n  //add the listener to the main, window object, and update the states\n  document.addEventListener('keydown', function (event) {\n    if (event.keyCode === 37) {\n      inputStates.left = true;\n    } else if (event.keyCode === 38) {\n      inputStates.up = true;\n    } else if (event.keyCode === 39) {\n      inputStates.right = true;\n    } else if (event.keyCode === 40) {\n      inputStates.down = true;\n    } else if (event.keyCode === 32) {\n      inputStates.space = true;\n    }\n  }, false);\n\n  //if the key will be released, change the states object\n  document.addEventListener('keyup', function (event) {\n    if (event.keyCode === 37) {\n      inputStates.left = false;\n    } else if (event.keyCode === 38) {\n      inputStates.up = false;\n    } else if (event.keyCode === 39) {\n      inputStates.right = false;\n    } else if (event.keyCode === 40) {\n      inputStates.down = false;\n    } else if (event.keyCode === 32) {\n      inputStates.space = false;\n    }\n  }, false);\n};\n\nconst addCanvasListeners = (inputStates, canvas) => {\n  // Mouse event listeners\n  canvas.addEventListener('mousemove', function (e) {\n    inputStates.mousePos = getMousePos(e, canvas);\n  }, false);\n\n  canvas.addEventListener('mousedown', function (e) {\n    inputStates.mousedown = true;\n    inputStates.mouseButton = e.button;\n  }, false);\n\n  canvas.addEventListener('mouseup', function (e) {\n    inputStates.mousedown = false;\n  }, false);\n};\n\nconst Input = {\n  listen(inputStates = {}, canvas) {\n    addWindowListeners(inputStates);\n    addCanvasListeners(inputStates, canvas);\n  }  \n};\n\nexport default Input;\n","let oldTime = 0;\n\nconst Timer = {\n  getDelta(currentTime) {\n    const delta = currentTime - oldTime;\n    oldTime = currentTime;\n    return delta;\n  },\n  distanceToMove(delta, speed) {\n    return (speed * delta) / 1000;\n  }\n};\n\nexport default Timer;\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","class SpriteImage {\n  constructor(img, x, y, width, height) {\n    this.img = img; // the whole image that contains all sprites\n    this.x = x; // x, y position of the sprite image in the whole image\n    this.y = y;\n    this.width = width; // width and height of the sprite image\n    this.height = height;\n  }\n\n  // xPos and yPos = position where the sprite should be drawn,\n  // scale = rescaling factor between 0 and 1\n  draw(ctx, xPos, yPos, scale) {\n    ctx.drawImage(\n      this.img,\n      this.x,\n      this.y,\n      this.width,\n      this.height,\n      xPos,\n      yPos, // x, y, width and height of img to draw\n      this.width * scale,\n      this.height * scale\n    );\n  }\n}\n\nexport default SpriteImage;\n","// Collisions between rectangle\nconst rectangles = (x1, y1, w1, h1, x2, y2, w2, h2, e = 0) => {\n  if (x1 > x2 + w2 + e || x1 + w1 + e < x2) return false;\n  if (y1 > y2 + h2 + e || y1 + h1 + e < y2) return false;\n  return true;\n};\n\nconst collision = (entity1, entity2, extra = 0) => {\n  const { height: h1, width: w1 } = entity1;\n  const { height: h2, width: w2 } = entity2;\n\n  const { x: x1, y: y1 } = entity1.position;\n  const { x: x2, y: y2 } = entity2.position;\n\n  return rectangles(x1, y1, w1, h1, x2, y2, w2, h2, extra);\n};\n\nexport default collision;\n","import SpriteImage from './SpriteImage';\n\nclass SpriteAnimation {\n  constructor() {\n    this.spriteArray = [];\n    this.currentFrame = 0;\n    this.delayBetweenFrames = 10;\n\n    this.extractSprites = function(\n      spritesheet,\n      nbPostures,\n      nbFramesPerPosture,\n      spriteWidth,\n      spriteHeight\n    ) {\n      // number of sprites to extract\n      const nbSprites = nbPostures * nbFramesPerPosture - 1;\n      // number of sprites per row in the spritesheet\n      const nbSpritesPerRow = Math.floor(spritesheet.width / spriteWidth);\n\n      // Extract each sprite\n      for (let index = 0; index < nbSprites; index++) {\n        // Computation of the x and y position that corresponds to the sprite\n        // index\n        // x is the rest of index/nbSpritesPerRow * width of a sprite\n        const x = (index % nbSpritesPerRow) * spriteWidth;\n        // y is the divisor of index by nbSpritesPerRow * height of a sprite\n        const y = Math.floor(index / nbSpritesPerRow) * spriteHeight;\n\n        // build a spriteImage object\n        const s = new SpriteImage(spritesheet, x, y, spriteWidth, spriteHeight);\n\n        this.spriteArray.push(s);\n      }\n    };\n\n    this.then = performance.now();\n    this.totalTimeSinceLastRedraw = 0;\n\n    this.draw = function(ctx, x, y) {\n      // Use time based animation to draw only a few images per second\n      const now = performance.now();\n      const delta = now - this.then;\n\n      // draw currentSpriteImage\n      const currentSpriteImage = this.spriteArray[this.currentFrame];\n      // x, y, scale. 1 = size unchanged\n      currentSpriteImage.draw(ctx, x, y, 1);\n\n      // if the delay between images is elapsed, go to the next one\n      if (this.totalTimeSinceLastRedraw > this.delayBetweenFrames) {\n        // Go to the next sprite image\n        this.currentFrame++;\n        this.currentFrame %= this.spriteArray.length;\n\n        // reset the total time since last image has been drawn\n        this.totalTimeSinceLastRedraw = 0;\n      } else {\n        // sum the total time since last redraw\n        this.totalTimeSinceLastRedraw += delta;\n      }\n\n      this.then = now;\n    };\n\n    this.setNbImagesPerSecond = function(nb) {\n      // elay in ms between images\n      this.delayBetweenFrames = 1000 / nb;\n    };\n  }\n\n  reset() {\n    this.currentFrame = 0;\n  }\n}\n\nexport default SpriteAnimation\n","import SpriteImage from \"./SpriteImage\";\nimport collision from \"./collision\";\nimport SpriteAnimation from \"./SpriteAnimation\";\n\nclass Player {\n  static maxSpeed = 0.5;\n  static RUNNING = \"running\";\n  static EXPLODING = \"exploding\";\n\n  constructor(ctx, inputStates) {\n    this.ctx = ctx;\n    this.inputStates = inputStates;\n    this.position = {\n      x: 0,\n      y: 0\n    };\n    this.scale = 0.7;\n    this.state = Player.RUNNING;\n  }\n\n  get height() {\n    return this.sprite.height * this.scale;\n  }\n\n  get width() {\n    return this.sprite.width * this.scale;\n  }\n\n  setState(state) {\n    if(this.state !== state ) {\n      this.state = state;\n\n      this.explosion.reset();\n    }\n  }\n\n  setImage(img, ...args) {\n    this.sprite = new SpriteImage(img, ...args);\n  }\n\n  setExplosion(img) {\n    this.explosion = new SpriteAnimation();\n    this.explosion.extractSprites(img, 16, 10, 64, 64);\n  }\n\n  checkCollision(...entities) {\n    return !!entities.find(ent => collision(this, ent, -20));\n  }\n\n  moveToStartPosition() {\n    const { height: cH, width: cW } = this.ctx.canvas;\n    this.position = {\n      x: cW / 2 - (this.sprite.width * this.scale) / 2,\n      y: cH - 16 - this.sprite.height * this.scale\n    };\n  }\n\n  setPosition(x, y) {\n    this.position = { x, y };\n  }\n\n  update(dt) {\n    switch (this.state) {\n      case Player.RUNNING:\n        if (this.inputStates.left) {\n          this.position.x += -Player.maxSpeed * dt;\n        }\n        if (this.inputStates.right) {\n          this.position.x += Player.maxSpeed * dt;\n        }\n\n        this.sprite.draw(\n          this.ctx,\n          this.position.x,\n          this.position.y,\n          this.scale\n        );\n        break;\n\n      case Player.EXPLODING:\n        this.explosion.draw(this.ctx, this.position.x, this.position.y );\n        break;\n\n      default:\n        break;\n    }\n  }\n}\n\nexport default Player;\n","import SpriteImage from \"./SpriteImage\";\n\nclass Road {\n  static LANE_CENTER = [220, 344, 476, 600];\n\n  constructor(ctx, inputStates) {\n    this.ctx = ctx;\n    this.inputStates = inputStates;\n    this.speed = {\n      x: 0,\n      y: 0\n    };\n\n    this.accel = {\n      x: 0,\n      y: 0\n    };\n\n    this.totalSeconds = 0;\n  }\n\n  setImage(img, ...args) {\n    this.sprite = new SpriteImage(img, ...args);\n  }\n\n  update(dt) {\n    const { width: cW } = this.ctx.canvas;\n    const { height: sH, width: sW } = this.sprite;\n    this.totalSeconds += dt;\n\n    this.speed.y += this.accel.y * dt;\n\n    const numImages = Math.ceil(cW / sW) + 1;\n    const yPos = (this.totalSeconds * this.speed.y) % sH;\n\n    this.ctx.save();\n    this.ctx.translate(0, yPos);\n    for (let i = 0; i < numImages; i++) {\n      this.sprite.draw(this.ctx, cW / 2 - sW / 2, -i * sH, 1);\n    }\n    this.ctx.restore();\n  }\n}\n\nexport default Road;\n","const Load = {\n  images(...files) {\n    let loaded = 0;\n    const images = {};\n    return new Promise(resolve => {\n      files.forEach(file => {\n        const img = new Image();\n        img.src = file;\n        img.onload = () => {\n          loaded++;\n          images[file] = img;\n          if (loaded === files.length) resolve(images);\n        };\n      });\n    });\n  }\n};\n\nexport default Load;\n","import SpriteImage from \"./SpriteImage\";\nimport Road from \"./Road\";\n\nclass Vehicle {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.scale = 0.9;\n    this.speed = {\n      x: 0.002,\n      y: 0.1\n    };\n  }\n\n  get height() {\n    return this.sprite.height * this.scale;\n  }\n\n  get width() {\n    return this.sprite.width * this.scale;\n  }\n\n  setImage(img, ...args) {\n    this.sprite = new SpriteImage(img, ...args);\n  }\n\n  moveToStartPosition(startOffset) {\n    const sOff = startOffset || this.startOffset;\n    this.lane = Vehicle.getRandomInt(0, Road.LANE_CENTER.length);\n    const { height: sH, width: sW } = this.sprite;\n    this.position = {\n      x: Road.LANE_CENTER[this.lane] - sW / 2,\n      y: -(sH + sOff)\n    };\n    this.startOffset = sOff;\n  }\n\n  update(dt) {\n    const laneX = Road.LANE_CENTER[this.lane];\n    const { width: sW } = this.sprite;\n\n    if (Math.abs(laneX - sW / 2 - this.position.x) > 20) {\n      this.speed.x = -this.speed.x;\n    }\n\n    this.position.x += this.speed.x * dt;\n    this.position.y += this.speed.y * dt;\n    this.sprite.draw(this.ctx, this.position.x, this.position.y, this.scale);\n\n    if (this.position.y > this.ctx.canvas.height) {\n      this.moveToStartPosition();\n    }\n  }\n\n  static getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\n  }\n}\n\nexport default Vehicle;\n","import Input from \"./Input\";\nimport Timer from \"./Timer\";\nimport Player from \"./Player\";\nimport Road from \"./Road\";\nimport Load from \"./Load\";\nimport Vehicle from \"./Vehicle\";\nimport collision from \"./collision\";\n\nimport audi from \"./images/Topdown_vehicle_sprites_pack/Audi.png\";\nimport truck from \"./images/Topdown_vehicle_sprites_pack/truck.png\";\nimport road from \"./images/road.png\";\nimport taxi from \"./images/Topdown_vehicle_sprites_pack/taxi.png\";\nimport car from \"./images/Topdown_vehicle_sprites_pack/Car.png\";\nimport explosion from \"./images/exp2_0.png\";\n\nconst TIME_BETWEEN_LEVELS = 5000;\n\nconst GAME_STATE = {\n  MAIN_MENU: 0,\n  RUNNING: 1,\n  GAME_OVER: 2\n};\n\nconst INITIAL_SPEED = {\n  TRUCK: 0.15,\n  CAR: 0.12,\n  TAXI: 0.14,\n  ROAD: 0.4\n};\n\nclass Game {\n  constructor() {\n    this.inputStates = {};\n\n    // game states\n    this.currentGameState = GAME_STATE.RUNNING;\n    this.currentLevel = 1;\n    this.currentLevelTime = TIME_BETWEEN_LEVELS;\n  }\n\n  static checkCollision(entity1, entity2) {\n    if (collision(entity1, entity2, 20)) {\n      if (collision(entity1, entity2)) {\n        entity1.moveToStartPosition();\n      } else {\n        entity1.speed = { ...entity2.speed };\n      }\n    }\n  }\n\n  loadAssets(cb) {\n    Load.images(audi, road, truck, taxi, car, explosion).then(images =>\n      cb(images)\n    );\n  }\n\n  start(canvasElement) {\n    // Canvas, context etc.\n    this.canvas = canvasElement;\n\n    // important, we will draw with this object\n    this.ctx = this.canvas.getContext(\"2d\");\n    // default police for text\n    this.ctx.font = \"22px Arial\";\n    // Create the different key and mouse listeners\n    Input.listen(this.inputStates, this.canvas);\n\n    this.player = new Player(this.ctx, this.inputStates);\n    this.road = new Road(this.ctx, this.inputStates);\n\n    this.roadLimitLeft = {\n      height: this.canvas.height,\n      width: 1,\n      position: {\n        x: 90,\n        y: 0\n      }\n    };\n\n    this.roadLimitRight = {\n      height: this.canvas.height,\n      width: 1,\n      position: {\n        x: this.canvas.width - 90,\n        y: 0\n      }\n    };\n\n    this.truck = new Vehicle(this.ctx);\n    this.taxi = new Vehicle(this.ctx);\n    this.car = new Vehicle(this.ctx);\n\n    this.loadAssets(images => {\n      this.player.setImage(images[audi], 78, 24, 96, 216);\n      this.player.setExplosion(images[explosion]);\n      this.road.setImage(images[road], 0, 0, 840, 650);\n      this.truck.setImage(images[truck], 78, 24, 96, 216);\n      this.car.setImage(images[car], 78, 24, 96, 216);\n      this.taxi.setImage(images[taxi], 72, 18, 102, 220);\n\n      this.car.scale = 0.79;\n      this.taxi.scale = 0.68;\n\n      this.resetEntities();\n\n      requestAnimationFrame(this.mainLoop.bind(this));\n    });\n  }\n\n  resetEntities() {\n    this.player.moveToStartPosition();\n    this.taxi.moveToStartPosition(200);\n    this.truck.moveToStartPosition(450);\n    this.car.moveToStartPosition(700);\n\n    this.road.speed.y = INITIAL_SPEED.ROAD;\n    this.road.accel.y = 0;\n\n    this.truck.speed.y = INITIAL_SPEED.TRUCK;\n    this.taxi.speed.y = INITIAL_SPEED.TAXI;\n    this.car.speed.y = INITIAL_SPEED.CAR;\n\n    this.player.setState(Player.RUNNING);\n  }\n\n  clearCanvas() {\n    const { width, height } = this.canvas;\n    this.ctx.clearRect(0, 0, width, height);\n  }\n\n  running(dt) {\n    this.clearCanvas();\n\n    if (this.nextRoadSpeed < this.road.speed.y) {\n      this.road.accel.y = 0;\n    }\n\n    this.road.update(dt);\n    this.truck.update(dt);\n    this.taxi.update(dt);\n    this.car.update(dt);\n    this.player.update(dt);\n\n    this.displayScore();\n\n    this.currentLevelTime -= dt;\n\n    if (\n      this.player.checkCollision(\n        this.truck,\n        this.taxi,\n        this.car,\n        this.roadLimitLeft,\n        this.roadLimitRight\n      )\n    ) {\n      this.player.setState(Player.EXPLODING);\n      setTimeout(() => (this.currentGameState = GAME_STATE.GAME_OVER), 1000);\n    }\n\n    Game.checkCollision(this.car, this.truck);\n    Game.checkCollision(this.car, this.taxi);\n    Game.checkCollision(this.taxi, this.truck);\n  }\n\n  gameOver() {\n    const pad = 100;\n    const tOff = 150;\n    const line = 50;\n\n    const { width: cW, height: cH } = this.ctx.canvas;\n    this.ctx.save();\n    this.ctx.fillStyle = \"rgba(0, 0, 0, 0.05)\";\n    this.ctx.fillRect(pad, 50, cW - pad * 2, cH - pad);\n    this.ctx.fillStyle = \"white\";\n    this.ctx.fillText(\"GAME OVER\", cW / 2 - tOff, pad + line);\n    this.ctx.fillText(\n      \"Press SPACE to start again\",\n      cW / 2 - tOff,\n      pad + line * 2\n    );\n    this.ctx.fillText(\"Move with arrow keys\", cW / 2 - tOff, pad + line * 3);\n    this.ctx.fillText(\n      `Survive ${TIME_BETWEEN_LEVELS / 1000} seconds for next level`,\n      cW / 2 - tOff,\n      pad + line * 4\n    );\n    this.ctx.restore();\n  }\n\n  mainLoop(time) {\n    // number of ms since last frame draw\n    const dt = Timer.getDelta(time);\n\n    switch (this.currentGameState) {\n      case GAME_STATE.RUNNING:\n        this.running(dt);\n\n        if (this.currentLevelTime < 0) {\n          this.goToNextLevel();\n        }\n\n        break;\n      case GAME_STATE.MAIN_MENU:\n        // TO DO !\n        break;\n      case GAME_STATE.GAME_OVER:\n        this.gameOver();\n        if (this.inputStates.space) this.startNewGame();\n        break;\n      default:\n        break;\n    }\n\n    // call the animation loop every 1/60th of second\n    requestAnimationFrame(this.mainLoop.bind(this));\n  }\n\n  goToNextLevel() {\n    // reset time available for next level\n    this.currentLevelTime = TIME_BETWEEN_LEVELS;\n    this.currentLevel++;\n\n    const difficult = 1.2;\n\n    this.nextRoadSpeed = this.road.speed.y * difficult;\n    this.road.accel.y = 0.00001;\n\n    this.truck.speed.y *= difficult;\n    this.car.speed.y *= difficult;\n    this.taxi.speed.y *= difficult;\n  }\n\n  startNewGame() {\n    this.currentLevelTime = TIME_BETWEEN_LEVELS;\n    this.currentLevel = 1;\n    this.currentGameState = GAME_STATE.RUNNING;\n    this.nextRoadSpeed = INITIAL_SPEED.ROAD;\n    this.resetEntities();\n  }\n\n  displayScore() {\n    const { ctx, currentLevel, currentLevelTime } = this;\n    ctx.save();\n    ctx.fillStyle = \"White\";\n    ctx.fillText(\"Level: \" + currentLevel, 300, 30);\n    ctx.fillText(\"Time: \" + (currentLevelTime / 1000).toFixed(1), 300, 60);\n    ctx.restore();\n  }\n}\n\nexport default Game;\n","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import './index.css';\nimport Game from './Game'\n\nwindow.onload = function init() {\n  const game = new Game();\n  game.start(document.querySelector('canvas'));\n};\n"],"sourceRoot":""}